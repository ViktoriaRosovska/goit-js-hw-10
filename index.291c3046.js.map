{"mappings":"YAAA,IAEMA,EAAU,wECEhB,SAASC,IACP,IAAOC,EAAS,IAAIC,gBAAgB,CAC9B,YAAaH,IAGjB,OAAOI,MAAM,GAAeC,ODTf,sCCSY,KAAUA,OAAPH,IACvBI,MAAK,SAACC,GAEH,GADAC,QAAQC,IAAIF,IACPA,EAASG,GACV,MAAM,IAAIC,MAAMJ,EAASK,QAE7B,OAAOL,EAASM,M,IAEnBC,OAAM,SAAAC,GACHP,QAAQC,IAAIM,GACZC,EAAOC,UAAUC,OAAO,Y,IAGpC,SAASC,EAAcC,GACnB,IAAOlB,EAAS,IAAIC,gBAAgB,CAChC,YAAaH,EACbqB,UAAWD,IAEf,OAAOhB,MAAM,GAAqBC,OD1Bf,6CC0BY,KAAUA,OAAPH,IAC7BI,MAAK,SAACC,GAEH,GADAC,QAAQC,IAAIF,IACPA,EAASG,GACV,MAAM,IAAIC,MAAMJ,EAASK,QAE7B,OAAOL,EAASM,M,IAEnBC,OAAM,SAAAC,GACHP,QAAQC,IAAIM,GACZC,EAAOC,UAAUC,OAAO,Y,ICnCpC,IAAMI,EAASC,SAASC,cAAc,iBAChCC,EAAUF,SAASC,cAAc,aACjCE,EAAUH,SAASC,cAAc,WAC1BR,EAASO,SAASC,cAAc,UAkB7C,SAASG,EAAgBP,GACrBD,EAAcC,GAASd,MAAK,SAAAsB,GACxBpB,QAAQC,IAAImB,GACZ,IAAMC,EAAQN,SAASO,cAAc,OACrCD,EAAME,IAAMH,EAAK,GAAGI,IACpBH,EAAMI,MAAMC,MAAQ,QACpBL,EAAMI,MAAME,OAAS,QACrBN,EAAMI,MAAMG,UAAY,UACxBX,EAAQY,QAAQR,GAChBH,EAAQT,UAAUqB,IAAI,Y,IA1B9BtB,EAAOC,UAAUqB,IAAI,aACrBZ,EAAQT,UAAUqB,IAAI,aAGlBrC,IAAcK,MAAK,SAACsB,GAChBpB,QAAQC,IAAImB,GAKpB,SAA6BA,GACzBA,EAAKW,KAAI,SAAAC,G,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KACZ,OAAOpB,EAAOgB,IAAI,IAAIK,OAAOD,EAAMD,G,IANnCG,CAAoBhB,E,IAiC5BN,EAAOuB,iBAAiB,UAExB,WACInB,EAAQT,UAAUC,OAAO,aACzBO,EAAQqB,UAAY,GAEpBnB,EAAgBL,EAAOyB,OAfA3B,EAgBLE,EAAOyB,MAdzB9C,IAAcK,MAAK,SAACsB,GAChB,IAAMoB,EAAUpB,EAAKqB,WAAU,SAAAT,G,OAAIA,EAAFC,KAAerB,C,IAChDK,EAAQyB,mBAAmB,YAAa,OAAyD7C,OAAlDuB,EAAKoB,GAASN,KAAK,iCAAuFrC,OAAxDuB,EAAKoB,GAASG,YAAY,gCAAwD9C,OAA1BuB,EAAKoB,GAASI,YAAY,Q,IAJ3L,IAA2BhC,C","sources":["src/constants.js","src/cat-api.js","src/index.js"],"sourcesContent":["const BASE_URL = 'https://api.thecatapi.com/v1/breeds';\nconst SEARCH_CAT_URL = 'https://api.thecatapi.com/v1/images/search';\nconst API_KEY = 'live_QsYCCrIuTzATlnLUejzzmT6tB3R4y5lDYCC3dsXctIGp0MgH716kJxF97KxoW4oD';\nexport { BASE_URL, SEARCH_CAT_URL, API_KEY };","import { BASE_URL, API_KEY, SEARCH_CAT_URL } from './constants';\nimport { pError } from './index';\n\n// виконує HTTP-запит і повертає проміс із масивом порід - результатом запиту\nfunction fetchBreeds() {\n  const  params = new URLSearchParams({\n        'x-api-key': API_KEY,\n    });\n\n    return fetch(`${BASE_URL}?${params}`)\n        .then((responce) => {\n            console.log(responce);\n            if (!responce.ok) {\n                throw new Error(responce.status);  \n            }\n            return responce.json();\n        })\n        .catch(error => {\n            console.log(error);\n            pError.classList.remove('invisible')});\n}\n\nfunction fetchCatImage(breedId) {\n    const  params = new URLSearchParams({\n        'x-api-key': API_KEY,\n        breed_ids: breedId,\n    });\n    return fetch(`${SEARCH_CAT_URL}?${params}`)\n        .then((responce) => {\n            console.log(responce);\n            if (!responce.ok) {\n                throw new Error(responce.status);  \n            }\n            return responce.json();\n        })\n        .catch(error => {\n            console.log(error);\n            pError.classList.remove('invisible');\n        });\n}\n\nexport { fetchBreeds, fetchCatImage };","import { fetchBreeds, fetchCatImage } from \"./cat-api\";\n\nconst select = document.querySelector('.breed-select');\nconst catInfo = document.querySelector('.cat-info');\nconst pLoader = document.querySelector('.loader');\nexport const pError = document.querySelector('.error');\npError.classList.add('invisible');\npLoader.classList.add('invisible');\n\nfunction getBreeds() {\n    fetchBreeds().then((data) => {\n        console.log(data);\n        selectFromCatBreeds(data);\n    });\n}\n\nfunction selectFromCatBreeds(data) {\n    data.map(({ id, name }) => {\n        return select.add(new Option(name, id));\n    });\n    \n}\n\nfunction fetchCatByBreed(breedId) {\n    fetchCatImage(breedId).then(data => {\n        console.log(data);\n        const image = document.createElement('img');\n        image.src = data[0].url;\n        image.style.width = '300px';\n        image.style.height = '250px';\n        image.style.objectFit = \"contain\";\n        catInfo.prepend(image);\n        pLoader.classList.add('invisible');\n    });  \n}\n\nfunction getCatDescription(breedId) {\n    \n    fetchBreeds().then((data) => {\n        const dataIdx = data.findIndex(({id}) => id === breedId);\n        catInfo.insertAdjacentHTML(\"beforeend\", `<h2>${data[dataIdx].name}</h2><h3>Description:</h3><p>${data[dataIdx].description}</p><h3>Temperament:</h3><p>${data[dataIdx].temperament}</p>`)\n} )};\n        \ngetBreeds();\n\nselect.addEventListener('change', onChangeSelectForChoiceBreed);\n\nfunction onChangeSelectForChoiceBreed() {\n    pLoader.classList.remove('invisible');\n    catInfo.innerHTML = '';\n    // console.log(select.value);\n    fetchCatByBreed(select.value);\n    getCatDescription(select.value);\n}"],"names":["$826109a56306c1ec$export$a9861bd62f48e142","$ae0c329fb0fb36dc$export$913382e0b15b5503","params","URLSearchParams","fetch","concat","then","responce","console","log","ok","Error","status","json","catch","error","$b8f9b7833fa37166$export$b427c34a9f928dd0","classList","remove","$ae0c329fb0fb36dc$export$f1249508e4d9d5bc","breedId","breed_ids","$b8f9b7833fa37166$var$select","document","querySelector","$b8f9b7833fa37166$var$catInfo","$b8f9b7833fa37166$var$pLoader","$b8f9b7833fa37166$var$fetchCatByBreed","data","image","createElement","src","url","style","width","height","objectFit","prepend","add","map","param","id","name","Option","$b8f9b7833fa37166$var$selectFromCatBreeds","addEventListener","innerHTML","value","dataIdx","findIndex","insertAdjacentHTML","description","temperament"],"version":3,"file":"index.291c3046.js.map"}