{"mappings":"AAIA,SAASA,IACP,MAAOC,EAAS,IAAIC,gBAAgB,CAC9B,YCJQ,0EDOZ,OAAOC,MAAM,uCAAeF,KACvBG,MAAMC,IAEH,GADAC,QAAQC,IAAIF,IACPA,EAASG,GACV,MAAM,IAAIC,MAAMJ,EAASK,QAE7B,OAAOL,EAASM,MAAM,IAEzBC,OAAMC,IACHP,QAAQC,IAAIM,GACZC,EAAOC,UAAUC,OAAO,YAAY,G,CAGhD,SAASC,EAAcC,GACnB,MAAOjB,EAAS,IAAIC,gBAAgB,CAChC,YCtBQ,wEDuBRiB,UAAWD,IAEf,OAAOf,MAAM,8CAAqBF,KAC7BG,MAAMC,IAEH,GADAC,QAAQC,IAAIF,IACPA,EAASG,GACV,MAAM,IAAIC,MAAMJ,EAASK,QAE7B,OAAOL,EAASM,MAAM,IAEzBC,OAAMC,IACHP,QAAQC,IAAIM,GACZC,EAAOC,UAAUC,OAAO,YAAY,G,CEnChD,MAAMI,EAASC,SAASC,cAAc,iBAChCC,EAAUF,SAASC,cAAc,aACjCE,EAAUH,SAASC,cAAc,WAC1BR,EAASO,SAASC,cAAc,UAkB7C,SAASG,EAAgBP,GACrBD,EAAcC,GAASd,MAAKsB,IACxBpB,QAAQC,IAAImB,GACZ,MAAMC,EAAQN,SAASO,cAAc,OACrCD,EAAME,IAAMH,EAAK,GAAGI,IACpBH,EAAMI,MAAMC,MAAQ,QACpBL,EAAMI,MAAME,OAAS,QACrBN,EAAMI,MAAMG,UAAY,UACxBX,EAAQY,QAAQR,GAChBH,EAAQT,UAAUqB,IAAI,YAAY,G,CA1B1CtB,EAAOC,UAAUqB,IAAI,aACrBZ,EAAQT,UAAUqB,IAAI,aAGlBpC,IAAcI,MAAMsB,IAChBpB,QAAQC,IAAImB,GAKpB,SAA6BA,GACzBA,EAAKW,KAAI,EAACC,GAAEA,EAAEC,KAAEA,KACLnB,EAAOgB,IAAI,IAAII,OAAOD,EAAMD,K,CANnCG,CAAoBf,EAAK,IAiCjCN,EAAOsB,iBAAiB,UAExB,WACIlB,EAAQT,UAAUC,OAAO,aACzBO,EAAQoB,UAAY,GAEpBlB,EAAgBL,EAAOwB,OAfA1B,EAgBLE,EAAOwB,MAdzB5C,IAAcI,MAAMsB,IAChB,MAAMmB,EAAUnB,EAAKoB,WAAU,EAACR,GAACA,KAAQA,IAAOpB,IAChDK,EAAQwB,mBAAmB,YAAa,OAAOrB,EAAKmB,GAASN,oCAAoCb,EAAKmB,GAASG,0CAA0CtB,EAAKmB,GAASI,kBAAkB,IAJjM,IAA2B/B,C","sources":["src/cat-api.js","src/constants.js","src/index.js"],"sourcesContent":["import { BASE_URL, API_KEY, SEARCH_CAT_URL } from './constants';\nimport { pError } from './index';\n\n// виконує HTTP-запит і повертає проміс із масивом порід - результатом запиту\nfunction fetchBreeds() {\n  const  params = new URLSearchParams({\n        'x-api-key': API_KEY,\n    });\n\n    return fetch(`${BASE_URL}?${params}`)\n        .then((responce) => {\n            console.log(responce);\n            if (!responce.ok) {\n                throw new Error(responce.status);  \n            }\n            return responce.json();\n        })\n        .catch(error => {\n            console.log(error);\n            pError.classList.remove('invisible')});\n}\n\nfunction fetchCatImage(breedId) {\n    const  params = new URLSearchParams({\n        'x-api-key': API_KEY,\n        breed_ids: breedId,\n    });\n    return fetch(`${SEARCH_CAT_URL}?${params}`)\n        .then((responce) => {\n            console.log(responce);\n            if (!responce.ok) {\n                throw new Error(responce.status);  \n            }\n            return responce.json();\n        })\n        .catch(error => {\n            console.log(error);\n            pError.classList.remove('invisible');\n        });\n}\n\nexport { fetchBreeds, fetchCatImage };","const BASE_URL = 'https://api.thecatapi.com/v1/breeds';\nconst SEARCH_CAT_URL = 'https://api.thecatapi.com/v1/images/search';\nconst API_KEY = 'live_QsYCCrIuTzATlnLUejzzmT6tB3R4y5lDYCC3dsXctIGp0MgH716kJxF97KxoW4oD';\nexport { BASE_URL, SEARCH_CAT_URL, API_KEY };","import { fetchBreeds, fetchCatImage } from \"./cat-api\";\n\nconst select = document.querySelector('.breed-select');\nconst catInfo = document.querySelector('.cat-info');\nconst pLoader = document.querySelector('.loader');\nexport const pError = document.querySelector('.error');\npError.classList.add('invisible');\npLoader.classList.add('invisible');\n\nfunction getBreeds() {\n    fetchBreeds().then((data) => {\n        console.log(data);\n        selectFromCatBreeds(data);\n    });\n}\n\nfunction selectFromCatBreeds(data) {\n    data.map(({ id, name }) => {\n        return select.add(new Option(name, id));\n    });\n    \n}\n\nfunction fetchCatByBreed(breedId) {\n    fetchCatImage(breedId).then(data => {\n        console.log(data);\n        const image = document.createElement('img');\n        image.src = data[0].url;\n        image.style.width = '300px';\n        image.style.height = '250px';\n        image.style.objectFit = \"contain\";\n        catInfo.prepend(image);\n        pLoader.classList.add('invisible');\n    });  \n}\n\nfunction getCatDescription(breedId) {\n    \n    fetchBreeds().then((data) => {\n        const dataIdx = data.findIndex(({id}) => id === breedId);\n        catInfo.insertAdjacentHTML(\"beforeend\", `<h2>${data[dataIdx].name}</h2><h3>Description:</h3><p>${data[dataIdx].description}</p><h3>Temperament:</h3><p>${data[dataIdx].temperament}</p>`)\n} )};\n        \ngetBreeds();\n\nselect.addEventListener('change', onChangeSelectForChoiceBreed);\n\nfunction onChangeSelectForChoiceBreed() {\n    pLoader.classList.remove('invisible');\n    catInfo.innerHTML = '';\n    // console.log(select.value);\n    fetchCatByBreed(select.value);\n    getCatDescription(select.value);\n}"],"names":["$6b5f202d1456c0af$export$913382e0b15b5503","params","URLSearchParams","fetch","then","responce","console","log","ok","Error","status","json","catch","error","$1f0dc3b9307be026$export$b427c34a9f928dd0","classList","remove","$6b5f202d1456c0af$export$f1249508e4d9d5bc","breedId","breed_ids","$1f0dc3b9307be026$var$select","document","querySelector","$1f0dc3b9307be026$var$catInfo","$1f0dc3b9307be026$var$pLoader","$1f0dc3b9307be026$var$fetchCatByBreed","data","image","createElement","src","url","style","width","height","objectFit","prepend","add","map","id","name","Option","$1f0dc3b9307be026$var$selectFromCatBreeds","addEventListener","innerHTML","value","dataIdx","findIndex","insertAdjacentHTML","description","temperament"],"version":3,"file":"index.1b8f578b.js.map"}